{"version":3,"sources":["cannon.png","components/inputModal.js","components/cannon.mp3","components/background.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Input","input","buttonStyle","bottom","right","position","width","height","margin","padding","fontSize","InputModal","props","useRef","useState","lastNumber","setLastNumber","handleClicked","setIsStarted","isStarted","getNumber","style","marginBottom","value","onChange","e","target","verticalAlign","Button","variant","onClick","Wrapper","Grass1","Grass2","Cannon","img","CannonBall","AnimatedBall","animated","Background","numArr","setNumArr","isFirstClicked","setIsFirstClicked","pickedNumber","setPickedNumber","audio","Audio","cannon","toggle","setToggle","transition","useTransition","from","y","x","enter","config","wobbly","item","length","parseInt","randomNumber","Math","random","tempArr","popped","splice","play","alert","handleClick","number","i","push","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef051e36.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cannon.e296de57.png\";","import React, {useState, useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: 700px;\r\n    height: 400px;\r\n    background: rgb(146, 150, 138);\r\n    position: absolute;\r\n    bottom: 300px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    border-radius: 20px;\r\n    border: 15px solid black;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n`\r\n\r\nconst Input = styled.input`\r\n    width: 100px;\r\n    height:50px;\r\n    vertical-align: middle;\r\n`\r\n\r\nconst buttonStyle = {\r\n    bottom: '20px',\r\n    right: '20px',\r\n    position: 'absolute',\r\n    width: '70px',\r\n    height: '70px',\r\n    margin: '0',\r\n    padding: '0',\r\n    fontSize: '20px'\r\n}\r\n\r\n\r\nfunction InputModal(props) {\r\n    const numRef = useRef();\r\n    const [lastNumber,setLastNumber] = useState(0);\r\n    const handleClicked = () => {\r\n        props.setIsStarted(!props.isStarted);\r\n        props.getNumber(lastNumber);\r\n        setLastNumber(0);\r\n    };\r\n    \r\n    if(props.isStarted === false){\r\n        return(\r\n            <Container>\r\n                <div>\r\n                    <h1 style={{marginBottom: '30px'}}>마지막 번호가 몇 번인가요?</h1>\r\n                    <Input value={lastNumber} onChange={(e)=>{setLastNumber(e.target.value)}}/>\r\n                    <label style={{fontSize: \"2.5em\" ,verticalAlign: \"middle\"}}>번</label>\r\n                </div>\r\n                <Button variant=\"danger\" style={buttonStyle} onClick={()=>{handleClicked()}}>입력</Button>\r\n            </Container>\r\n        ) \r\n    } else {\r\n        return (\r\n            <Button variant=\"outline-danger\" style={buttonStyle} onClick={()=>{handleClicked()}}>다시</Button>\r\n        )\r\n    }\r\n        \r\n    \r\n\r\n}\r\n\r\nexport default InputModal;","export default __webpack_public_path__ + \"static/media/cannon.d95a3f42.mp3\";","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport img from '../cannon.png';\r\nimport InputModal from './inputModal';\r\nimport {useTransition, animated, config } from 'react-spring';\r\nimport cannon from './cannon.mp3';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 1100px;\r\n    height: 100vh;\r\n    background: white;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    background: linear-gradient(blue, white);\r\n    @media screen and (max-width: 768px){\r\n        max-width: 100wh;\r\n        overflow-x: hidden;\r\n      }\r\n`\r\n\r\nconst Grass1 = styled.div`\r\n    position: absolute;\r\n    background: lightgreen;\r\n    width: 1200px;\r\n    height: 500px;\r\n    bottom: 0;\r\n    right: 0;\r\n    clip-path: ellipse(68% 39% at 98% 100%);\r\n`\r\n\r\nconst Grass2 = styled.div`\r\n    position: absolute;\r\n    background: green;\r\n    width: 1000px;\r\n    height: 500px;\r\n    bottom: 0;\r\n    left: 0;\r\n    clip-path: ellipse(68% 26% at -1% 100%);\r\n`\r\nconst Cannon = styled.div`\r\n    position: absolute;\r\n    width: 400px;\r\n    height: 225px;\r\n    background: url(${img});\r\n    background-size: cover;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n`\r\n\r\nconst Button = styled.div`\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 100px;\r\n    bottom: 30px;\r\n    left: 50%;\r\n    transform: translateX(-65%);\r\n    cursor: pointer;\r\n    opacity: 1;\r\n`\r\n\r\nconst CannonBall = styled.div`\r\n    position: absolute;\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 100px;\r\n    bottom: 125px;\r\n    left: 50%;\r\n    transform: translateX(-65%);\r\n    background: rgb(45, 194, 84)\r\n`\r\nconst AnimatedBall = styled(animated.div)`\r\n    position: absolute;\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 100%;\r\n    bottom: 125px;\r\n    left: 44%;\r\n    transform: translateX(-65%);\r\n    background: rgb(45, 194, 84);\r\n    font-size: 10em;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport default function Background(){\r\n    const [lastNumber,setLastNumber] = useState(0);\r\n    const [numArr,setNumArr] = useState([]);\r\n    const [isFirstClicked,setIsFirstClicked] = useState(false);\r\n    const [pickedNumber,setPickedNumber] = useState([]);\r\n    const getNumber = (number) => {\r\n        let tempArr = [];\r\n        for(let i=0;i<number;i++){\r\n            tempArr.push(i);\r\n        }\r\n        setLastNumber(number);\r\n        setNumArr(tempArr);\r\n        setIsFirstClicked(false);\r\n    };\r\n    const [isStarted,setIsStarted] = useState(false);\r\n    var audio = new Audio(cannon);\r\n    const handleClick = () => {\r\n        setIsFirstClicked(true);\r\n        setToggle(toggle + 1);\r\n        let randomNumber = Math.random()*lastNumber;\r\n        let tempArr = numArr;\r\n        let popped = tempArr.splice(randomNumber,1);\r\n        setPickedNumber(popped);\r\n        setNumArr(tempArr);\r\n        if(lastNumber!==0){\r\n        setLastNumber(lastNumber - 1);\r\n        audio.play();\r\n        } else {\r\n            alert('번호를 모두 뽑았습니다.')\r\n            setIsFirstClicked(false);\r\n            setIsStarted(false);\r\n        }\r\n    };\r\n    const [toggle,setToggle] = useState(true);\r\n    const transition = useTransition(toggle, {\r\n        from: {y: 50, width: 100, x: 0, height: 100},\r\n        enter: {y: -300, width:400, x: -130, height: 400},\r\n        config: config.wobbly\r\n      })\r\n\r\n    \r\n    return(\r\n    <Wrapper>\r\n        <Grass2 />\r\n        <Grass1 />\r\n        {isFirstClicked ? transition((style,item)=>\r\n        item ? <AnimatedBall style={style}>{pickedNumber.length ? parseInt(pickedNumber) + 1 : ''}</AnimatedBall>: ''\r\n        ) : <CannonBall />}\r\n        \r\n        <Cannon />\r\n        <Button onClick={()=>{handleClick()}}/>\r\n        <InputModal getNumber={getNumber} setIsStarted={setIsStarted} isStarted={isStarted}/>\r\n        \r\n        \r\n    </Wrapper>\r\n    )\r\n}\r\n\r\n","import './App.css';\r\nimport Background from './components/background.js'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Background />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}