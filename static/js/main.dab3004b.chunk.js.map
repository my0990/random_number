{"version":3,"sources":["cannon.png","components/inputModal.js","components/background.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Input","input","buttonStyle","bottom","right","position","width","height","margin","padding","fontSize","InputModal","props","useState","isStarted","setIsStarted","lastNumber","setLastNumber","handleClicked","getNumber","style","marginBottom","value","onChange","e","target","verticalAlign","Button","variant","onClick","Wrapper","Grass1","Grass2","Cannon","img","CannonBall","AnimatedBall","animated","Background","isFirstClicked","setIsFirstClicked","toggle","setToggle","transition","useTransition","from","y","x","enter","config","wobbly","item","number","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAAe,MAA0B,mC,eCInCA,EAAYC,IAAOC,IAAV,kVAgBTC,EAAQF,IAAOG,MAAV,8FAMLC,EAAc,CAChBC,OAAQ,OACRC,MAAO,OACPC,SAAU,WACVC,MAAO,OACPC,OAAQ,OACRC,OAAQ,IACRC,QAAS,IACTC,SAAU,QAiCCC,I,cAAAA,EA7Bf,SAAoBC,GAAQ,IAAD,EACUC,oBAAS,GADnB,mBAChBC,EADgB,KACNC,EADM,OAEYF,mBAAS,GAFrB,mBAEhBG,EAFgB,KAELC,EAFK,KAGjBC,EAAgB,WAClBH,GAAcD,GACdF,EAAMO,UAAUH,IAGpB,OAAiB,IAAdF,EAEK,eAACjB,EAAD,WACI,gCACI,oBAAIuB,MAAO,CAACC,aAAc,QAA1B,oFACA,cAACrB,EAAD,CAAOsB,MAAON,EAAYO,SAAU,SAACC,GAAKP,EAAcO,EAAEC,OAAOH,UACjE,uBAAOF,MAAO,CAACV,SAAU,QAASgB,cAAe,UAAjD,uBAEJ,cAACC,EAAA,EAAD,CAAQC,QAAQ,SAASR,MAAOlB,EAAa2B,QAAS,WAAKX,KAA3D,6BAKJ,cAACS,EAAA,EAAD,CAAQC,QAAQ,iBAAiBR,MAAOlB,EAAa2B,QAAS,WAAKX,KAAnE,2B,QCrDNY,EAAUhC,IAAOC,IAAV,yLASPgC,EAASjC,IAAOC,IAAV,uMAUNiC,EAASlC,IAAOC,IAAV,iMASNkC,EAASnC,IAAOC,IAAV,qNAIUmC,GAOhBP,EAAS7B,IAAOC,IAAV,iOAYNoC,EAAarC,IAAOC,IAAV,+NAUVqC,EAAetC,YAAOuC,WAAStC,IAAhBD,CAAH,+NAWH,SAASwC,IAAa,IAAD,EACGzB,mBAAS,GADZ,mBACdI,GADc,aAEWJ,oBAAS,GAFpB,mBAEzB0B,EAFyB,KAEVC,EAFU,OAUL3B,oBAAS,GAVJ,mBAUzB4B,EAVyB,KAUlBC,EAVkB,KAW1BC,EAAaC,wBAAcH,EAAQ,CACrCI,KAAM,CAACC,EAAG,GAAIxC,MAAO,IAAKyC,EAAG,EAAGxC,OAAQ,KACxCyC,MAAO,CAACF,GAAI,IAAKxC,MAAM,IAAKyC,GAAI,IAAKxC,OAAQ,KAC7C0C,OAAQA,SAAOC,SAEnB,OACA,eAACpB,EAAD,WACI,cAACE,EAAD,IACA,cAACD,EAAD,IACCQ,EAAiB,KAAO,cAACJ,EAAD,IACxBQ,GAAW,SAACvB,EAAM+B,GAAP,OACZA,EAAO,cAACf,EAAD,CAAchB,MAAOA,IAAU,MAEtC,cAACa,EAAD,IACA,cAAC,EAAD,CAAQJ,QAAS,WAlBjBW,GAAkB,GAClBE,EAAUD,EAAS,MAmBnB,cAAC,EAAD,CAAYtB,UAxBE,SAACiC,GACfnC,EAAcmC,SCtEPC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAChB,EAAD,OCKSiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dab3004b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cannon.e296de57.png\";","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\n\nconst Container = styled.div`\n    display: flex;\n    width: 700px;\n    height: 400px;\n    background: rgb(146, 150, 138);\n    position: absolute;\n    bottom: 150px;\n    left: 50%;\n    transform: translateX(-50%);\n    border-radius: 20px;\n    border: 15px solid black;\n    justify-content: center;\n    align-items: center;\n    \n`\n\nconst Input = styled.input`\n    width: 100px;\n    height:50px;\n    vertical-align: middle;\n`\n\nconst buttonStyle = {\n    bottom: '20px',\n    right: '20px',\n    position: 'absolute',\n    width: '70px',\n    height: '70px',\n    margin: '0',\n    padding: '0',\n    fontSize: '20px'\n}\n\n\nfunction InputModal(props) {\n    const [isStarted,setIsStarted] = useState(false);\n    const [lastNumber,setLastNumber] = useState(0);\n    const handleClicked = () => {\n        setIsStarted(!isStarted);\n        props.getNumber(lastNumber);\n    };\n    \n    if(isStarted === false){\n        return(\n            <Container>\n                <div>\n                    <h1 style={{marginBottom: '30px'}}>마지막 번호가 몇 번인가요?</h1>\n                    <Input value={lastNumber} onChange={(e)=>{setLastNumber(e.target.value)}}/>\n                    <label style={{fontSize: \"2.5em\" ,verticalAlign: \"middle\"}}>번</label>\n                </div>\n                <Button variant=\"danger\" style={buttonStyle} onClick={()=>{handleClicked()}}>입력</Button>\n            </Container>\n        ) \n    } else {\n        return (\n            <Button variant=\"outline-danger\" style={buttonStyle} onClick={()=>{handleClicked()}}>다시</Button>\n        )\n    }\n        \n    \n\n}\n\nexport default InputModal;","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport img from '../cannon.png';\nimport InputModal from './inputModal';\nimport {useTransition, animated, config } from 'react-spring';\n\nconst Wrapper = styled.div`\n    width: 1100px;\n    height: 100vh;\n    background: white;\n    margin: 0 auto;\n    position: relative;\n    background: linear-gradient(blue, white);\n`\n\nconst Grass1 = styled.div`\n    position: absolute;\n    background: lightgreen;\n    width: 1200px;\n    height: 500px;\n    bottom: 0;\n    right: 0;\n    clip-path: ellipse(68% 39% at 98% 100%);\n`\n\nconst Grass2 = styled.div`\n    position: absolute;\n    background: green;\n    width: 1000px;\n    height: 500px;\n    bottom: 0;\n    left: 0;\n    clip-path: ellipse(68% 26% at -1% 100%);\n`\nconst Cannon = styled.div`\n    position: absolute;\n    width: 400px;\n    height: 225px;\n    background: url(${img});\n    background-size: cover;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n`\n\nconst Button = styled.div`\n    position: absolute;\n    width: 40px;\n    height: 40px;\n    border-radius: 100px;\n    bottom: 30px;\n    left: 50%;\n    transform: translateX(-65%);\n    cursor: pointer;\n    opacity: 1;\n`\n\nconst CannonBall = styled.div`\n    position: absolute;\n    width: 100px;\n    height: 100px;\n    border-radius: 100px;\n    bottom: 125px;\n    left: 50%;\n    transform: translateX(-65%);\n    background: rgb(45, 194, 84)\n`\nconst AnimatedBall = styled(animated.div)`\n    position: absolute;\n    width: 100px;\n    height: 100px;\n    border-radius: 100%;\n    bottom: 125px;\n    left: 44%;\n    transform: translateX(-65%);\n    background: rgb(45, 194, 84);\n`\n\nexport default function Background(){\n    const [lastNumber,setLastNumber] = useState(0);\n    const [isFirstClicked,setIsFirstClicked] = useState(false);\n    const getNumber = (number) => {\n        setLastNumber(number);\n    };\n    const handleClick = () => {\n        setIsFirstClicked(true);\n        setToggle(toggle + 1);\n    };\n    const [toggle,setToggle] = useState(true);\n    const transition = useTransition(toggle, {\n        from: {y: 50, width: 100, x: 0, height: 100},\n        enter: {y: -300, width:400, x: -130, height: 400},\n        config: config.wobbly\n      })\n    return(\n    <Wrapper>\n        <Grass2 />\n        <Grass1 />\n        {isFirstClicked ? null : <CannonBall />}\n        {transition((style,item)=>\n        item ? <AnimatedBall style={style}/>: ''\n        )}\n        <Cannon />\n        <Button onClick={()=>{handleClick()}}/>\n        \n        <InputModal getNumber={getNumber}/>\n        \n    </Wrapper>\n    )\n}\n\n","import './App.css';\nimport Background from './components/background.js'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Background />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}